
# 节点配置
# 节点可用磁盘空间，单位G
machine_disk=10240
# 节点可用内存大小，单位G
machine_memory=72
# 节点可用cpu核心数
machine_cores=8
# 磁盘使用安全阈值，默认85%的磁盘总空间
machine_disk_ava_threds=0.85
# 内存使用安全阈值，默认85%的内存总空间
machine_memory_ava_threds=0.85
# 以上配置可通过在执行「安装脚本」之后获得

# hdfs
# hdfs副本数
hdfs_replication=3
# 是否开启压缩
enable_compression=true

# hbase
# 安全磁盘空间使用范围内，hbase可用的磁盘空间比例，默认全部
hbase_disk_ava_threds=0.9
# 安全内存空间使用范围内，hbase可用的内存空间比例，默认80%（预留一部分给HDFS等其他服务）
hbase_memory_ava_threds=0.8
# region最小大小，单位G
region_min_size=10
# region最大大小，单位G
region_max_size=30
# 设置单机点最佳的region个数
best_region_num=200
# memstore刷写大小
memstore_flush_size=256

# bucketcache模式参数
# hbase可用内存中，javaheap堆内内存最大可用阈值
javaheap_ava_threds=0.35
# javaheap可用内存中，安全使用阈值
javaheap_safaty_threds=0.79
# java_heap最大大小
javaheap_max_size=56
# java_heap最小大小
javaheap_min_size=4
# upperlimit与lowerlimit差距值
upper2lower_threds=0.1
# region大小调整时，一次调整的步伐，单位G
region_size_incr_step=5
# lowerlimit最大大小
max_lower_limit=0.7
# lowerlimit最小大小
min_lower_limit=0.4

# lru模式参数
# hbase可用安全内存范围中，memstore（即写缓存）占比
lru_memstore_threds=0.45
# hbase可用安全内存范围中，lru读缓存占比大小
lru_blockcache_threds=0.3

# yarn
# 节点可用cores中，yarn可使用的cores占比
yarn_core_ava_threds=0.8
# 节点可用内存中，yarn可使用的内存占比
yarn_memory_ava_threds=0.8
# yarn 单个container 最小分配内存，单位G
yarn_container_min_memory=1
# yarn 单个container 最大分配内存，单位G
yarn_container_max_memory=10
# yarn 单个container 最小分配core
yarn_container_min_cores=1
# yarn 单个container 最大分配core
yarn_container_max_cores=10

# kafka
# topic默认分区数
num_partitions=8
